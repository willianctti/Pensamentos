Todas as dependências desse projeto:

bcryptjs, connect-flash, cookie-parser, cookie-session, express, express-flash, 
express-session, mysql2, sequelize, nodemon, session-file-store, express-handlebars


importando as dependências:


const express = require('express')
const exphbs = require('express-handlebars')
const session = require('express-session')
const FileStore = require('session-file-store')(session)
const flash = require('express-flash')

const app = express()


-----------------------------------------------------------

conectando ao banco localhost:
const { Sequelize } = require('sequelize')

const sequelize = new Sequelize('pensamentos', 'root', '', {
    host: 'localhost',
    dialect: 'mysql'
})

try {
    sequelize.authenticate()
    console.log("Conectamos com sucesso!")


} catch(err) {
    console.log(err)
}



-------------------------------------------------------------


// Template Engine
app.engine('handlebars', exphbs.engine())
app.set('view engine', 'handlebars')

// Resposta do body
app.use(
    expres.urlencoded({
        extended: true
    })
)

app.use(express.json)

---------------------------------------------------------------

// Session Middleware
app.use(
    session({
        name: "session",
        secret: "nosso_secret",
        resave: false,
        saveUninitialized: false,
        store: new FileStore({
            logFn: function() {},
            path: require('path').join(require('os').tempdir(), 'sessions')
        })
    })
)


cookie:

  }),
        cookie: {
            secure: false,
            maxAge: 360000,
            expires: new Date(Date.now() + 360000),
            httpOnly: true
        }
    })
)



----------------------------------------------------------

// Public Path
app.use(express.static('public'))

// Flash Messages
app.use(flash())

// Set Session to res
app.use((req, res, next) => {
    if(req.session.userid) {
        res.locals.session = req.session
    }
    next()
})

-------------------------------------------------------------








			Models --------------------------------------



Comecei pelo model de pensamento pois é o mais simples:

const { DataTypes } = require('sequelize')
const db = require('../db/conn')

// User

const Pensamento = db.define('Pensamento', {
    title: {
        type: DataTypes.STRING,
        allowNull: false,
        require: true
    }
})

module.exports = Pensamento





e o model User:

const { DataTypes } = require('sequelize')
const db = require('../db/conn')

const User = db.define('User', {
    name: {
        type: DataTypes.STRING,
        require: true
    },
    email: {
        type: DataTypes.STRING,
        require: true
    },
    senha: {
        type: DataTypes.STRING,
        require: true
    },
})

module.exports = User



Relacionamento entre User e pensamento:

const User = require('./User')
Pensamento.belongsTo(User)
User.hasMany()










		Criando a home do projeto ---------------------------------

No nosso main fiz um body simples. Uma nav com a logo principal, ul e li
de Login; Register e um footer básico



		Rotas e controller -----------------------------------------

Iniciei as rotas com o arquivo pensamentosRoutes.js
importei o express, router e nosso controller

inciei a rota home com
router.get('/', PensamentoController.showPensamentos)





no Controller importei o model Pensamento e o User

criei o que liga a rota home:

module.exports = class PensamentosController {
    static async showPensamentos(req, res) {
        res.render('pensamentos/home')
    }
}




no nosso index.js puxamos as rotas depois de a importar
app.use('/pensamentos', pensamentosRoutes)

e também para a rota /
app.use('/', PensamentosController.showPensamentos)


